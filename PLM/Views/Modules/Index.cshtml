@model PagedList.IPagedList<PLM.Module>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Modules";   
}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Modules</title>
</head>
<body>

    <br/><br/>
    <section id="page-breadcrumb">
        <div class="vertical-center sun">
            <div class="container">
                <div class="row">
                    <div class="action">
                        <div class="col-sm-12">
                            <h1 class="title">Modules</h1>
                            <p>Be Creative</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/#page-breadcrumb-->

    <div class="container">
        @using (Html.BeginForm("Index", "Modules", FormMethod.Get))
        {
            <p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        }
        @Html.ActionLink("Reset Search Criteria", "Index", "Modules")
    </div>

    <section id="projects" class="padding-top">
        <div class="container">
            <div class="row">
                <div class="col-md-3 col-sm-4">
                    <div class="sidebar portfolio-sidebar">
                        <div class="sidebar-item categories">
                            <h3>Subject Categories</h3>
                            <ul class="nav navbar-stacked">
                                @*@foreach (Category cat in Model.Cats)
                                {
                                    <li><a href="#">@cat<span class="pull-right">@CategoriesCount(cat.CategoryID)</span></a></li>
                                }*@
                                <li>@Html.ActionLink((string)("Aviation " + ViewBag.Cat1Count), "Index", new { filterParam = 1, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Business " + ViewBag.Cat2Count), "Index", new { filterParam = 2, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Communications " + ViewBag.Cat3Count), "Index", new { filterParam = 3, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Humanities " + ViewBag.Cat4Count), "Index", new { filterParam = 4, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Maritime " + ViewBag.Cat5Count), "Index", new { filterParam = 5, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Math " + ViewBag.Cat6Count), "Index", new { filterParam = 6, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Medical " + ViewBag.Cat7Count), "Index", new { filterParam = 7, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Science " + ViewBag.Cat8Count), "Index", new { filterParam = 8, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Social Science " + ViewBag.Cat9Count), "Index", new { filterParam = 9, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Technical " + ViewBag.Cat10Count), "Index", new { filterParam = 10, currentFilter = ViewBag.CurrentFilter })</li>
                                <li>@Html.ActionLink((string)("Other " + ViewBag.Cat11Count), "Index", new { filterParam = 11, currentFilter = ViewBag.CurrentFilter })</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-9 col-sm-8">
                    <div class="row">
                        @foreach (Module module in Model)
                        {
                            try { 
                            Answer answer = module.Answers.ElementAt(0);
                            Picture picture = answer.Pictures.ElementAt(0);
                            <div class="col-xs-6 col-sm-6 col-md-4 portfolio-item branded logos">
                                <div class="portfolio-wrapper">
                                    <div class="portfolio-single">
                                        <div class="portfolio-thumb">
                                            <img onerror="this.src='Content/images/Error.bmp';" src="@picture.Location"  class="img-responsive moduleImage" alt="PLM Logo">
                                        </div>
                                        <div class="portfolio-view">
                                            <ul class="nav nav-pills">
                                                <li>
                                                    <a href="@Url.Action("Setup", "Game", new { PLMid = module.ModuleID, changeSettings = 0}, null)" class="elements"><img onerror="this.src='Content/images/Error.bmp';" height="33" width="33" src="~/Content/Images/home/PlayIcon.png" /></a>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="portfolio-info ">
                                        @*Insert "Go to Setup" button here*@
                                        <h2>@module.Name</h2>
                                    </div>
                                </div>
                            </div>
                            }
                            catch(ArgumentOutOfRangeException){
                                
                            }
                        }                  
                    </div>

                    <br />
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index",
                    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

                </div>
            </div>
        </div>
    </section>
    <!--/#projects-->


    <script type="text/javascript" src="~/Scripts/jquery.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.isotope.min.js"></script>
    <script type="text/javascript" src="~/Scripts/lightbox.min.js"></script>
    <script type="text/javascript" src="~/Scripts/wow.min.js"></script>
    <script type="text/javascript" src="~/Scripts/main.js"></script>
</body>

@model PLM.Module
@{
    ViewBag.Title = "Edit Module";
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Edit Module</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/font-awesome.min.css" rel="stylesheet">
    <link href="~/Content/animate.min.css" rel="stylesheet">
    <link href="~/Conetnt/lightbox.css" rel="stylesheet">
    <link href="~/Content/main.css" rel="stylesheet">
    <link href="~/Content/responsive.css" rel="stylesheet">
    <link href="~/Content/Site.css" rel="stylesheet" />

    <link rel="shortcut icon" href="~/Content/images/ico/favicon.ico">
</head><!--/head-->

<section id="page-breadcrumb">
    <div class="vertical-center sun">
        <div class="container">
            <div class="row">
                <div class="action">
                    <div class="col-sm-12">
                        <h1 class="title">Edit Module</h1>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<br />
<br />
<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ModuleID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CategoryID">Category</label>
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", String.Empty)
                @Html.ValidationMessageFor(model => model.CategoryId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DefaultNumAnswers, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="range" id="numAnswers" name="DefaultNumAnswers" step="3" min="3" max="15" value="@Model.DefaultNumAnswers" oninput="outputUpdate(value, '#numAnswersOutput')" />
                <output for="numAnswers" id="numAnswersOutput">@Model.DefaultNumAnswers</output>
                @*@Html.EditorFor(model => model.DefaultNumAnswers)
                @Html.ValidationMessageFor(model => model.DefaultNumAnswers)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DefaultNumQuestions, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="range" id="numQuestions" name="DefaultNumQuestions" step="5" min="5" max="260" value="@Model.DefaultNumQuestions" oninput="outputUpdate(value, '#numQuestionsOutput')" />
                <output for="numQuestions" id="numQuestionsOutput">@Model.DefaultNumQuestions</output>
                @*@Html.EditorFor(model => model.DefaultNumPictures)
                @Html.ValidationMessageFor(model => model.DefaultNumPictures)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DefaultTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="range" id="time" name="DefaultTime" value="@Model.DefaultTime" min="15" max="135" step="15" oninput="outputUpdate(value, '#timeOutput')" />
                <output for="time" id="timeOutput">@Model.DefaultTime</output>
                @*@Html.EditorFor(model => model.DefaultTime)
                @Html.ValidationMessageFor(model => model.DefaultTime)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isPrivate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isPrivate)
                @Html.ValidationMessageFor(model => model.isPrivate)
            </div>
        </div>

        <br />

        <p>
            @Html.ActionLink("Add New Answer", "Create", new { controller = "Answers", ID = Model.ModuleID})
        </p>

        <div class="form-group col-md-10">
            <table class="table ">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Answers)
                    </th>
                    <th>
                        Picture Count
                    </th>
                    <th></th>
                </tr>

                @foreach (Answer ans in Model.Answers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => ans.AnswerString)

                        </td>
                        <td>
                            @ans.Pictures.Count()
                        </td>
                        <td>
                            @Html.ActionLink("Add Answer", "Create", new { controller = "Answers", id = Model.ModuleID })
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { controller = "Answers", id = ans.AnswerID }) |
                            @*@Html.ActionLink("Details", "Details", new { controller = "Answers", id = ans.AnswerID }) |*@
                            @Html.ActionLink("Delete", "Delete", new { controller = "Answers", id = ans.AnswerID })
                        </td>
                    </tr>
                }

            </table>

            @*Displays each picture in module*@
            @*<div class="form-group, scroll-box, col-md-10">
        @foreach (Answer ans in Model.Answers)
        {
            foreach (Picture pic in ans.Pictures)
            {
                <img onerror="this.src='/Content/images/Error.bmp';" src="@pic.Location" alt="Answer Image" class="img-thumbnail" width="225"/>
            }
        }
    </div>*@
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-submit" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { controller = "Profile" });
</div>

@section Scripts {
    <script src="~/Scripts/Setup.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
